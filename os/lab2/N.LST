Microsoft (R) Macro Assembler Version 5.10                  10/10/19 11:25:1
                                                             Page     1-1


       1				.386P 
       2				 
       3				descr struc 
       4 0000  0000			limit dw 0 
       5 0002  0000			base_l dw 0 
       6 0004  00			base_m db 0 
       7 0005  00			attr_1 db 0 
       8 0006  00			attr_2 db 0 
       9 0007  00			base_h db 0 
      10 0008				descr ends 
      11				
      12 0000				data segment 
      13				;–¢–∞–±–ª–∏—Ü–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –¥
					–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤ GDT 
      14 0000  0000			gdt_null descr <0,0,0,0,0,0> ;Hy–ª–µ–≤o
					–π –¥–µ—Å–∫—Ä–∏n—Ç–æ—Ä 
      15 0002  0000			
      16 0004  00			
      17 0005  00			
      18 0006  00			
      19 0007  00			
      20				
      21 0008  4900			gdt_data descr <data_size-1,0,0,92h> ;C
					e–ª–µ–∫—Ç–æ—Ä 8, —Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–
					Ω—ã—Ö 
      22 000A  0000			
      23 000C  00			
      24 000D  92			
      25 000E  00			
      26 000F  00			
      27				
      28 0010  3B01			gdt_code descr <code_size-1,,,98h> ;–°–
					µ–ª–µ–∫—Ç–æ—Ä 16, —Å–µ–≥–º–µ–Ω—Ç –∫–æ–º
					–∞–Ω–¥ 
      29 0012  0000			
      30 0014  00			
      31 0015  98			
      32 0016  00			
      33 0017  00			
      34				
      35 0018  FF00			gdt_stack descr <255,0,0,92h> ;–°–µ–ª–µ
					–∫—Ç–æ—Ä 24, —Å–µ–≥–º–µ–Ω—Ç —Å—Ç–µ–∫–∞ 
      36 001A  0000			
      37 001C  00			
      38 001D  92			
      39 001E  00			
      40 001F  00			
      41				
      42 0020  FF0F			gdt_screen descr <4095,8000h,0Bh,92h> ;
					–°–µ–ª–µ–∫—Ç–æ—Ä 32, –≤–∏–¥–µ–æ–±—É—Ñ–µ
					—Ä 
      43 0022  0080			
      44 0024  0B			
      45 0025  92			
Microsoft (R) Macro Assembler Version 5.10                  10/10/19 11:25:1
                                                             Page     1-2


      46 0026  00			
      47 0027  00			
      48				
      49 = 0028				gdt_size=$-gdt_null
      50				
      51 0028  0000000000000000		pdescr dq 0 ;–ü—Å–µ–≤–¥–æ–¥–µ—Å–∫—Ä–∏n—
					Ç–æ—Ä 
      52 0030  1E			attr   db 1Eh
      53 0031  1B 52 65 61 6C 20	mes1   db 27,'Real mode' 
      54       6D 6F 64 65		
      55 003B  1B 50 72 6F 74 65	mes2   db 27,'Protected mode'
      56       63 74 65 64 20 6D	
      57       6F 64 65			
      58 = 004A				data_size=$-gdt_null 
      59 004A				data ends 
      60				
      61 0000				text segment 'code' use16  
      62				assume CS:text,DS:data 
      63 0000				main proc
      64 0000  66| 33 C0			xor EAX, EAX 
      65 0003  B8 ---- R			mov AX, data 
      66 0006  8E D8				mov DS, AX
      67					
      68 0008  B8 B800				mov AX, 0B800h
      69 000B  8E C0				mov ES, AX
      70 000D  66| BB 0031 R			mov EBX, offset mes1
      71 0013  67| 8A 25 00000030 R		mov AH, attr
      72 001A  BF 00A0				mov DI, 160
      73 001D  B9 000A				mov CX, 10
      74 0020				screen1:
      75 0020  67| 8A 03			mov AL, byte ptr [EBX]
      76 0023  AB				stosw
      77 0024  43				inc BX
      78 0025  E2 F9				loop screen1
      79				 
      80				 
      81 0027  8C D8				mov AX, DS
      82					;–í—ã—á–∏—Å–ª–∏–º 32-–±–∏—Ç–æ–≤
					—ã–π –ª–∏–Ω –∞–¥—Ä–µ—Å —Å–µ–≥–º–µ–Ω—Ç–∞
					 –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–≥—Ä—É–∑–∏–º –µ–≥–
					æ
      83					;–≤ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–µ–≥
					–º–µ–Ω—Ç–∞ –¥–∞–Ω–Ω—ã—Ö GDT. 
      84 0029  66| C1 E0 04			shl EAX, 4
      85 002D  66| 8B E8			mov EBP, EAX 
      86 0030  66| BB 0008 R			mov EBX, offset gdt_data
      87 0036  89 47 02				mov [BX].base_l, AX
      88 0039  66| C1 C0 10			rol EAX, 16 
      89 003D  88 47 04				mov [BX].base_m, AL
      90					;–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –ª
					–∏–Ω–µ–π–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ —Å–µ–≥–º–
					µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å—Ç–µ–∫–∞
      91 0040  66| 33 C0			xor EAX, EAX 
      92 0043  8C C8				mov AX, CS
Microsoft (R) Macro Assembler Version 5.10                  10/10/19 11:25:1
                                                             Page     1-3


      93 0045  66| C1 E0 04			shl EAX, 4
      94 0049  66| BB 0010 R			mov EBX, offset gdt_code 
      95 004F  89 47 02				mov [BX].base_l, AX
      96 0052  66| C1 C0 10			rol EAX, 16 
      97 0056  88 47 04				mov [BX].base_m, AL 
      98					
      99 0059  66| 33 C0			xor EAX,EAX 
     100 005C  8C D0				mov AX, SS 
     101 005E  66| C1 E0 04			shl EAX, 4 
     102 0062  66| BB 0018 R			mov EBX, offset gdt_stack
     103 0068  89 47 02				mov [BX].base_l, AX
     104 006B  66| C1 C0 10			rol EAX, 16 
     105 006F  88 47 04				mov [BX].base_m, AL
     106					;–ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø—Å–µ–≤–
					¥–æ–¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä –∏ –∑–∞–≥—Ä—É–∑
					–∏–º —Ä–µ–≥–∏—Å—Ç—Ä GDTR
     107 0072  67| 66| 89 2D 0000		mov dword ptr pdescr+2, EBP
     108       002A R			
     109 007A  67| C7 05 00000028 R		mov word ptr pdescr, gdt_size-1
     110       0027			
     111 0083  67| 0F 01 15 00000028		lgdt pdescr
n.asm(76): warning A4057: Illegal size for operand
     112	R			
     113					;–ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä–µ—
					Ö–æ–¥ –≤ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —Ä–µ–∂–∏–
					º
     114 008B  FA				cli 
     115 008C  B0 80				mov AL, 80h
     116 008E  E6 70				out 70h, AL
     117					;–ü–µ—Ä–µ—Ö–æ–¥ –≤ –∑–∞—â–∏—â—ë
					–Ω–Ω—ã–π —Ä–µ–∂–∏–º
     118 0090  0F 20 C0				mov EAX, CR0
     119 0093  66| 83 C8 01			or  EAX, 1 ; (56)–£—Å—Ç–∞–Ω–æ–≤
					–∏–º –±–∏—Ç –†–ï
     120 0097  0F 22 C0				mov CR0, EAX 
     121					
     122 009A  EA				db 0EAh 
     123 009B  009F R				dw offset continue
     124 009D  0010				dw 16 ;–°–µ–ª–µ–∫—Ç–æ—Ä —Å–µ–≥–
					º–µ–Ω—Ç–∞ –∫–æ–º–∞–Ω–¥ 
     125					
     126 009F				continue: 
     127					;–î–µ–ª–∞–µ–º –∞–¥—Ä–µ—Å—É–µ–º—
					ã–º–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ç–µ–∫
     128 009F  B8 0008				mov AX, 8 
     129 00A2  8E D8				mov DS, AX
     130					
     131 00A4  B8 0018				mov AX, 24
     132 00A7  8E D0				mov SS, AX
     133					
     134 00A9  B8 0020				mov AX, 32 ;–°–µ–ª–µ–∫—Ç–æ—Ä —Å
					–µr–º–µ–Ω—Ç–∞ –≤–∏–¥–µ–æ–±—É—Ñ–µ—Ä–∞ 
     135 00AC  8E C0				mov ES, AX 
     136 00AE  BF 0140				mov DI, 320 
     137 00B1  B9 000F				mov CX, 15
Microsoft (R) Macro Assembler Version 5.10                  10/10/19 11:25:1
                                                             Page     1-4


     138 00B4  67| 8A 25 00000030 R		mov AH, attr
     139 00BB  66| BB 003B R			mov EBX, offset mes2
     140					
     141 00C1				screen2:
     142 00C1  67| 8A 03			mov AL, byte ptr [EBX]
     143 00C4  AB				stosw
     144 00C5  43				inc BX
     145 00C6  E2 F9				loop screen2
     146					
     147					;–û–ø—Ä–µ–¥–µ–ª–∏–º –æ–±—ä—ë–º 
					–¥–æ—Å—Ç—É–ø–Ω–æ–π —Ñ–∏–∑. –ø–∞–º—è—Ç–∏
     148 00C8				mem:
     149				
     150					
     151					
     152					;–ü–æ–¥r–æ—Ç–æ–≤–∏–º –ø–µ—Ä–µ—Ö
					–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º 
     153					;–°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏ –∑–∞–≥
					—Ä—É–∑–∏–º –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã –¥–ª—
					è —Ä–µ–∞–ø—å–Ω–ær–æ —Ä–µ–∂–∏–º–∞ 
     154 00C8  67| C7 05 00000008 R		mov gdt_data.limit, 0FFFFh
     155       FFFF			
     156 00D1  67| C7 05 00000010 R		mov gdt_code.limit, 0FFFFh
     157       FFFF			
     158 00DA  67| C7 05 00000018 R		mov gdt_stack.limit, 0FFFFh
     159       FFFF			
     160 00E3  67| C7 05 00000020 R		mov gdt_screen.limit, 0FFFFh
     161       FFFF			
     162					
     163 00EC  B8 0008				mov AX, 8 ;–ó–∞–≥—Ä—É–∑–∏–º —Ç–
					µ–Ω–µ–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä 
     164 00EF  8E D8				mov DS, AX ;—Å–µ–≥–º–µ–Ω—Ç–∞ –¥
					–∞–Ω–Ω—ã—Ö 
     165 00F1  B8 0018				mov AX, 24 ;–ó–∞r—Ä—É–∑–∏–º —Ç–
					µ–Ω–µ–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä 
     166 00F4  8E D0				mov SS, AX ;—Å—Ç–µ–∫–∞ 
     167 00F6  B8 0020				mov AX, 32 ;–ó–∞–≥—Ä—É–∑–∏–º —Ç
					–µ–Ω–µ–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä 
     168 00F9  8E C0				mov ES, AX ;–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–
					ª—å–Ω–ær–æ —Å–µ–≥–º–µ–Ω—Ç–∞ 
     169				
     170 00FB  EA				db 0EAh
     171 00FC  0100 R				dw offset go
     172 00FE  0010				dw 16 
     173					
     174					;–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω
					—ã–π —Ä–µ–∂–∏–º
     175 0100				go: 
     176 0100  0F 20 C0				mov EAX, CR0 
     177 0103  66| 83 E0 FE			and EAX, 0FFFFFFFEh ;–°–±—Ä–æ—Å
					–∏–º –±–∏—Ç P–ï
     178 0107  0F 22 C0				mov CR0, EAX 
     179 010A  EA				db 0EAh 
     180 010B  010F R				dw offset return
Microsoft (R) Macro Assembler Version 5.10                  10/10/19 11:25:1
                                                             Page     1-5


     181 010D  ---- R				dw text 
     182					
     183					; –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º –æ–ø–µ
					—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å—Ä–µ–¥—É —Ä–µ–∞–ª—
					å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
     184 010F				return: 
     185 010F  B8 ---- R			mov AX, data
     186 0112  8E D8				mov DS, AX
     187 0114  B8 ---- R			mov AX, stk
     188 0117  8E D0				mov SS, AX 
     189				
     190 0119  FB				sti
     191 011A  B0 00				mov AL, 0 
     192 011C  E6 70				out 70h, AL  
     193					
     194 011E  66| BB 0031 R			mov EBX, offset mes1
     195 0124  67| 8A 25 00000030 R		mov AH, attr
     196 012B  BF 0280				mov DI, 640
     197 012E  B9 000A				mov CX, 10
     198 0131				screen3:
     199 0131  8A 07				mov AL, byte ptr [BX]
     200 0133  AB				stosw
     201 0134  43				inc BX
     202 0135  E2 FA				loop screen3
     203				
     204 0137  B8 4C00				mov AX, 4C00h
     205 013A  CD 21				int 21h 
     206 013C				main endp 
     207				
     208 = 013C				code_size=$-main 
     209 013C				text ends
     210				
     211 0000				stk segment stack 'stack'
     212 0000  0100[				db 256 dup ('^')
     213	   5E			
     214			 ]	
     215				
     216 0100				stk ends 
     217				
     218				end main 
Microsoft (R) Macro Assembler Version 5.10                  10/10/19 11:25:1
                                                             Symbols-1


Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

DESCR  . . . . . . . . . . . . .  	0008	0006
  LIMIT  . . . . . . . . . . . .  	0000
  BASE_L . . . . . . . . . . . .  	0002
  BASE_M . . . . . . . . . . . .  	0004
  ATTR_1 . . . . . . . . . . . .  	0005
  ATTR_2 . . . . . . . . . . . .  	0006
  BASE_H . . . . . . . . . . . .  	0007

Segments and Groups:

                N a m e         	Size	Length	 Align	Combine Class

DATA . . . . . . . . . . . . . .  	32 Bit	004A	PARA	NONE	
STK  . . . . . . . . . . . . . .  	32 Bit	0100	PARA	STACK	'STACK'
TEXT . . . . . . . . . . . . . .  	16 Bit	013C	PARA	NONE	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ATTR . . . . . . . . . . . . . .  	L BYTE	0030	DATA

CODE_SIZE  . . . . . . . . . . .  	NUMBER	013C	
CONTINUE . . . . . . . . . . . .  	L NEAR	009F	TEXT

DATA_SIZE  . . . . . . . . . . .  	NUMBER	004A	

GDT_CODE . . . . . . . . . . . .  	L QWORD	0010	DATA
GDT_DATA . . . . . . . . . . . .  	L QWORD	0008	DATA
GDT_NULL . . . . . . . . . . . .  	L QWORD	0000	DATA
GDT_SCREEN . . . . . . . . . . .  	L QWORD	0020	DATA
GDT_SIZE . . . . . . . . . . . .  	NUMBER	0028	
GDT_STACK  . . . . . . . . . . .  	L QWORD	0018	DATA
GO . . . . . . . . . . . . . . .  	L NEAR	0100	TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	TEXT	Length = 013C
MEM  . . . . . . . . . . . . . .  	L NEAR	00C8	TEXT
MES1 . . . . . . . . . . . . . .  	L BYTE	0031	DATA
MES2 . . . . . . . . . . . . . .  	L BYTE	003B	DATA

PDESCR . . . . . . . . . . . . .  	L QWORD	0028	DATA

RETURN . . . . . . . . . . . . .  	L NEAR	010F	TEXT

SCREEN1  . . . . . . . . . . . .  	L NEAR	0020	TEXT
SCREEN2  . . . . . . . . . . . .  	L NEAR	00C1	TEXT
SCREEN3  . . . . . . . . . . . .  	L NEAR	0131	TEXT

@CPU . . . . . . . . . . . . . .  	TEXT  3471		
Microsoft (R) Macro Assembler Version 5.10                  10/10/19 11:25:1
                                                             Symbols-2


@FILENAME  . . . . . . . . . . .  	TEXT  n		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    175 Source  Lines
    175 Total   Lines
     37 Symbols

  47410 + 451658 Bytes symbol space free

      1 Warning Errors
      0 Severe  Errors
